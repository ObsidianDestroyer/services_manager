#### Управление сервисом

Требуется разработать web-приложение для управления любым (на ваш выбор) сервисом (демоном) GNU/Linux или альтернативной ОС.
Прототип интерфейса:

    Плашка состояния сервиса (демона) должна показывать его текущий статус: "Сервис остановлен" или "Сервис работает".
    Кнопки "Запустить", "Перезапустить", "Остановить" непосредственно управляют состоянием сервиса (демона).
    Флажок "Включить сервис" должен делать кнопки управления доступными или недоступными.
    Авторизация для доступа к web-интерфейсу НЕ требуется.

Требования к программе:

    Aiohttp (>= 3.2.0), Python3.5 или выше;
    логирование всех действий в syslog, конфиги для logrotate и syslog, если необходимы;
    состояние флажка должно сохраняться в любой БД или просто в файле;
    использование шаблонов (Jinja) для рендеринга страниц.

Будет плюсом:

    наличие тестов (AioHTTPTestCase), не обязательно но желательно;
    готовый spec-файл для сборки RPM-пакета с программой.

Предпочтительные средства реализации:

    образ системы Fedora 31.

Результат:

    код, расположенный на git-репозитории (например, github).

Срок:

    одна неделя

#### Редирект

Требуется разработать программу-редиректор для прокси-сервера Squid, выполняющую перенаправление запросов на заданные сайты.
Например, имеется список перенаправлений вида «ключ»: «значение»:

    yandex.ru: google.com
    lurkmore.to: wikipedia.org
    linux.org.ru: kernel.org

Когда пользователь через Squid обращается на yandex.ru, запрос должен переписываться и перенаправляться на google.com.

Требования к программе:

    логирование всех действий в syslog, отдельно редиректы, отдельно логи приложения;
    список перенаправлений должен быть представлен в виде файла с данными в формате JSON;
    все изменения в списке перенаправлений должны начинать работать сразу же, не требуя перезапуска приложений.

Будет плюсом:

    готовый spec-файл для сборки RPM-пакета с программой;
    интеграция с дистрибутивом и другими пакетами (с системой инцилизации, с пакетом squid);

Предпочтительные средства реализации:

    Образ системы Fedora 31;
    язык программирования: Python или C;
    дополнительные библиотеки: на ваш выбор, лучше если их не будет;

Результат:

    оформляются в виде git-репозитория со всеми необходимыми файлами: настройками Squid, исходниками программы и демонстрационным файлом со списком перенаправлений;

Срок:

    одна неделя

Документация:

    http://wiki.squid-cache.org/Features/Redirectors
    http://www.squid-cache.org/Doc/config/url_rewrite_program
